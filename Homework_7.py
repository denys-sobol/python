RED = '\033[31m'
GREEN = '\033[1;32m'
BLUE = '\033[34m'
YELLOW = '\033[1;33m'
RESET = '\033[0m'

# üè† –î–û–ú–ê–®–ù–Ñ –ó–ê–í–î–ê–ù–ù–Ø


# Task 1
# Make a program that has some sentence (a string) on input and returns a dict containing all unique words as keys and the number of occurrences as values. 
print(f"{GREEN}Task 1{RESET}")
print(f"{BLUE}-" * 50 + RESET)
sentence = "–¢—ñ–Ω—ñ —Å–ø–∞–¥–∞–ª–∏ –Ω–∞ –∑–µ–º–ª—é, —è–∫ –ø—É—Ö —ñ–∑ –ª–µ–ª–µ—á–æ–≥–æ –≥–Ω—ñ–∑–¥–∞, –ª—è–≥–∞–ª–∏ –Ω–∞ —Ä—ñ—á–∫–∏, –Ω–∞ –≥–æ—Ä–∏, –Ω–∞ —Ö–∞—Ç–∏, –∑–ª–µ–≥–∫–∞ –≤–æ—Ä—É—à–∏–ª–∏—Å—è –≤—ñ–¥ –≤—ñ—Ç–µ—Ä—Ü—è. –ú—ñ–∂ —Ç–∏–º–∏ —Ç—ñ–Ω—è–º–∏ —Å—Ç–æ—è–≤ –Ü–≤–∞–Ω, –Ω—ñ–±–∏ –∑–∞—Ö–æ–≤–∞–≤—à–∏—Å—è –≤—ñ–¥ –ª—é–¥–µ–π, —ñ —á—É–≤, —è–∫ –π–æ–≥–æ –æ–≥–æ—Ä—Ç–∞—î —á–∏—Å—Ç–∞ —Ç–∏—à–∞ –≤–µ—á–æ—Ä–∞. –°–ª—É—Ö–∞–≤, —è–∫ –¥–∑–≤–µ–Ω–∏—Ç—å –≤–æ–¥–∞ –≤ –ø–æ—Ç–æ—Ü—ñ, —è–∫ —à–µ–ø–æ—á—É—Ç—å —Ç—Ä–∞–≤–∏, —è–∫ –ø–æ—Ä–∏–≤–∞—î—Ç—å—Å—è –π–æ–≥–æ –¥—É—à–∞ –∫—É–¥–∏—Å—å —É –≤–∏—Å–æ—Ç—É, –¥–æ –∑—ñ—Ä."
print(f'{YELLOW}–û—Å—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç –æ–ø–æ–≤—ñ–¥–∞–Ω–Ω—è –ú–∏—Ö–∞–π–ª–∞ –ö–æ—Ü—é–±–∏–Ω—Å—å–∫–æ–≥–æ, "–¢—ñ–Ω—ñ –∑–∞–±—É—Ç–∏—Ö –ø—Ä–µ–¥–∫—ñ–≤":{RESET}')
print(sentence+"\n")

sentence = sentence.lower()
sentence = sentence.replace(',', '').replace('.', '')
words = sentence.split()
result = dict()

for word in words:
    result[word] = result.get(word, 0) + 1

print("–ü–æ—Ä–∞—Ö—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ö–æ–¥–∂–µ–Ω—å —Å–ª–æ–≤–∞ –≤ —É—Ä–∏–≤–∫—É: ")

for x,y in result.items():
    print(f"—Å–ª–æ–≤–æ: {RED}{x}{RESET} –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ö–æ–¥–∂–µ–Ω—å: {RED}{y}{RESET}")

print(f"{BLUE}=" * 50 + "\n" + RESET)

# Task 2
# Input data:

stock = {
    "banana": 6,
    "apple": 0,
    "orange": 32,
    "pear": 15
}
prices = {
    "banana": 4,
    "apple": 2,
    "orange": 1.5,
    "pear": 3
}

# Compute the total price of the stock where the total price is the sum of the price of an item multiplied by the quantity of this exact item.
# The code has to return the dictionary with the sums of the prices by the goods types.

print(f"{GREEN}Task 2{RESET}")
print(f"{BLUE}-" * 50 + RESET)
total_prices = {}

for item in stock:
    total_prices[item] = stock[item] * prices[item]

print("–í–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ø–∞—Å—ñ–≤ —Å–∫–ª–∞–¥–∞—î: ")

for x, y in total_prices.items():
    print(f"–¢–æ–≤–∞—Ä: {RED}{x}{RESET} –∫–æ—à—Ç—É—î: {RED}{y}{RESET} ")
print(f"{BLUE}=" * 50 + "\n" + RESET)


# Task 3

# List comprehension exercise
# Use a list comprehension to make a list containing tuples (i, j) where 'i' goes from 1 to 10 and 'j' is corresponding to 'i' squared.

print(f"{GREEN}Task 3{RESET}")
print(f"{BLUE}-" * 50 + RESET)

task3 = [(x, x**x) for x in range(11)]
print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:\n{task3}")

print(f"{BLUE}=" * 50 + "\n" + RESET)

# Task 4

# –°—Ç–≤–æ—Ä–∏—Ç–∏ –ª–∏—Å—Ç —ñ–∑ –¥–Ω—è–º–∏ —Ç–∏–∂–Ω—è.
# –í –æ–¥–∏–Ω —Ä—è–¥–æ–∫ (–Ω—É –∞–±–æ —è–∫ –∑–∞–≤–∂–¥–∏) —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Å–ª–æ–≤–Ω–∏–∫ –≤–∏–¥—É: {1: "Monday", 2:...
# –¢–∞–∫–æ–∂ –≤ –æ–¥–∏–Ω —Ä—è–¥–æ–∫ –∞–±–æ —è–∫ –≤–¥–∞—Å—Ç—å—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∑–≤–æ—Ä–æ—Ç–Ω–∏–π —Å–ª–æ–≤–Ω–∏–∫ {"Monday": 1,

print(f"{GREEN}Task 4{RESET}")
print(f"{BLUE}-" * 50 + RESET)

days_of_week = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]

print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è:")
day_to_num = { i+1 : day for i, day in enumerate(days_of_week)}
num_to_day = { day : i+1 for i, day in enumerate(days_of_week)}

print(day_to_num)
print(num_to_day)
print(f"{BLUE}=" * 50 + "\n" + RESET)
